{"version":3,"sources":["services/api.ts","hooks/useCart.tsx","styles/global.ts","util/format.ts","components/ButtonAddProductCart/style.ts","components/ButtonAddProductCart/index.tsx","components/ProductModal/style.ts","components/ProductModal/index.tsx","components/ProductCard/style.ts","components/ProductCard/index.tsx","components/Content/style.ts","components/Content/index.tsx","components/ButtonSidebar/style.ts","components/ButtonSidebar/index.tsx","components/SideBar/style.ts","components/SideBar/index.tsx","pages/Home/style.ts","pages/Home/index.tsx","pages/Cart/style.ts","pages/Cart/index.tsx","routes.tsx","components/Header/style.ts","components/Header/index.tsx","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","CartContext","createContext","CartProvider","children","useState","storagedCart","localStorage","getItem","JSON","parse","cart","setCart","addProduct","productId","a","updatedCart","productExists","find","product","id","amount","get","newProduct","data","push","updateProductAmount","updateCart","Error","alert","Provider","value","removeProduct","productIndex","findIndex","splice","error","useCart","useContext","GlobalStyles","createGlobalStyle","formatPrice","Intl","NumberFormat","style","currency","format","Container","styled","button","ButtonAddProductCart","cartItemsAmount","reduce","sumAmount","newSumAmount","onClick","size","color","div","ProductModal","name","isOpen","onRequestClose","preco","descricao","foto","categoria","overlayClassName","className","src","alt","ProductCard","props","isProductModalOpen","setisProductModalOpen","nome","main","Content","produtos","selectedCategory","map","ButtonSideBar","selected","rest","type","SideBar","categorias","handleClickButton","selectedCategoryId","String","Home","setSelectedCategoryId","categorys","setCategorys","products","setProducts","setSelectedCategory","useEffect","then","response","loadProducts","ProductTable","table","media","lessThan","Total","Cart","cartFormatted","priceFormatted","subTotal","total","sumTotal","disabled","handleProductDecrement","handleProductIncrement","Router","path","element","Link","Header","cartSize","length","to","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.430e4f39.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: 'https://my-json-server.typicode.com/matheusdevbr/data-mshop',\n})","\nimport { createContext, ReactNode, useContext, useState } from 'react';\n\nimport { IProductProps } from '../interfaces/interface';\n\nimport { api } from '../services/api';\n\ninterface CartProviderProps {\n  children: ReactNode;\n}\n\ninterface UpdateProductAmount {\n  productId: number;\n  amount: number;\n}\n\ninterface CartContextData {\n  cart: IProductProps[];\n  addProduct: (productId: number) => Promise<void>;\n  removeProduct: (productId: number) => void;\n  updateProductAmount: ({ productId, amount }: UpdateProductAmount) => void;\n}\n\nconst CartContext = createContext<CartContextData>({} as CartContextData);\n\nexport function CartProvider({ children }: CartProviderProps): JSX.Element {\n  const [cart, setCart] = useState<IProductProps[]>(() => {\n    const storagedCart = localStorage.getItem('@MShop:cart');\n    if (storagedCart) {\n      return JSON.parse(storagedCart); //retornando pro formato de array de produtos \n    }\n\n    return [];\n  });\n  \n  const addProduct = async (productId: number) => {\n   \n      const updatedCart = [...cart];\n      const productExists = updatedCart.find(product => product.id === productId);\n\n      if(productExists) {\n        productExists.amount += 1;\n      } else {\n        const product = await api.get(`/produtos/${productId}`)\n\n        const newProduct = {\n          ...product.data,\n          amount: 1\n        }\n        updatedCart.push(newProduct);\n      }\n\n      setCart(updatedCart);\n    \n  };\n\n  const removeProduct = (productId: number) => {\n    try {\n      const updatedCart = [...cart];\n      const productIndex = updatedCart.findIndex(product => product.id === productId);\n\n      if(productIndex >= 0) {\n        updatedCart.splice(productIndex, 1);\n        setCart(updatedCart);\n      } else {\n          throw Error();\n      }\n    } catch(error) {\n      alert(error)\n    }\n  };\n\n  const updateProductAmount = async ({\n    productId,\n    amount,\n  }: UpdateProductAmount) => {\n    try {\n      if (amount <= 0) {\n        return;\n      }\n\n      const updateCart = [...cart];\n      const productExists = updateCart.find(product => product.id === productId);\n\n      if (productExists) {\n        productExists.amount = amount;\n        setCart(updateCart);\n      } else {\n        throw Error();\n      }\n    } catch(error) {\n      alert(error)\n    }\n  };\n\n  return (\n    <CartContext.Provider\n      value={{ cart, addProduct, removeProduct, updateProductAmount }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart(): CartContextData {\n  const context = useContext(CartContext);\n\n  return context;\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  :root {\n    --background: #444;  \n  }\n\n  * { \n    margin: 0;\n    padding: 0;\n    border:0;\n    box-sizing: border-box;\n    vertical-align:baseline;\n  \n  }\n\n  html {\n    @media (max-width: 1080px) {\n      font-size: 93.75%;\n    }\n    @media (max-width: 720px) {\n      font-size: 87.5%;\n    }\n    @media (max-width: 500px) {\n      font-size:  65.7%;\n    }\n  }\n\n  body {\n    background: var(--background);\n    -webkit-font-smoothing: antialiased;\n  }\n  \n  body, input, textarea, button {\n      font-family: 'Poppins', sans-serif;\n      font-weight: 400;\n  }\n\n\n  button {\n    cursor: pointer;\n  }\n\n  [disabled] {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n  .react-modal-overlay {\n    background: rgba(0, 0, 0, 0.9);\n\n    position: fixed;  \n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;  \n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    padding: 3rem 2rem;\n  }\n\n\n.react-modal-content {\n    width: 100%;\n    max-width: 60rem;\n    background: #f8f2f5;\n\n    padding: 3rem;\n    position: relative;  \n    border-radius: 0.5rem;\n  }\n  \n`","export const { format: formatPrice } = new Intl.NumberFormat('pt-br', {\n  style: 'currency',\n  currency: 'BRL',\n});","import styled  from \"styled-components\";\n\nexport const Container = styled.button`\n  width: 100%;\n  max-width: 20rem;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem 2rem;\n    font-size: 1rem;\n\n    border-radius: 0.5rem;\n    background: #bbb;\n\n    color: #111;\n\n    div {\n        display: flex;\n        align-items: center;\n        padding: .5rem;\n        background: rgba(0, 0, 0, 0.1);\n        margin-right: 0.5rem;\n        border-radius: 0.2rem;\n        svg {\n          margin-right: 0.5rem;\n        }\n      }\n  \n    &:hover {\n      background: #999;\n\n      transition: 0.2s;\n    }\n`","import { MdAddShoppingCart } from \"react-icons/md\";\nimport { useCart } from \"../../hooks/useCart\";\nimport { Container } from \"./style\";\n\ninterface ButtonAddProductCartProps {\n  id: number;\n}\n\ninterface CartItemsAmount {\n  [key: number]: number;\n}\n\nexport function ButtonAddProductCart({ id }: ButtonAddProductCartProps) {\n  const { cart, addProduct } = useCart();\n\n  function handleAddProduct(productId: number) {\n    addProduct(productId);\n  }\n\n  const cartItemsAmount = cart.reduce((sumAmount, product) => {\n    const newSumAmount = { ...sumAmount };\n    newSumAmount[product.id] = product.amount;\n    return newSumAmount;\n  }, {} as CartItemsAmount)\n\n\n  return (\n    <Container \n            onClick={() => \n            handleAddProduct(id)}>\n              <div>\n                <MdAddShoppingCart size={18} color=\"#FFF\" />\n                {cartItemsAmount[id] || 0} \n              </div>\n            Adicionar ao carrinho\n    </Container>\n  )\n}","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  .product-info-modal{\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 2rem;\n\n    margin-bottom: 1rem;\n    text-align: center;\n    \n    img {\n      width: 100%;\n      max-width: 30rem;\n    }\n    .product-info-modal-text{\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      gap: 2rem;\n\n      h4 {\n        font-size: 2rem;\n        text-align: center;\n      }\n\n      p {\n        margin-top: 1rem;\n        padding: 10px;\n        border-radius: 5px;\n        background-color: #efefef\n      }\n      strong {\n        display: block;\n\n        font-size: 1.5rem;\n        margin-top: -2rem;\n      }\n    }\n  }\n`","\nimport Modal from 'react-modal'\n\nimport { IProductModalProps } from \"../../interfaces/interface\";\nimport { formatPrice } from '../../util/format';\nimport { ButtonAddProductCart } from '../ButtonAddProductCart';\nimport { Container } from './style';\n\n\nexport function ProductModal({name, isOpen, onRequestClose, preco, descricao, foto, id, categoria}: IProductModalProps) {\n \n  \n  return (\n      <Modal\n        isOpen={isOpen}\n        onRequestClose={onRequestClose}\n        overlayClassName=\"react-modal-overlay\"\n        className=\"react-modal-content\"\n      >\n      <Container>\n        <div className=\"product-info-modal\">\n          <div>\n            <img src={foto} alt={`Imagem do produto ${name}`} />\n          </div>\n\n          <div className=\"product-info-modal-text\">\n            <div>\n              <h4>{name}</h4>\n              <span>{categoria}</span>\n              <p>{descricao}</p>\n            </div>\n            <div>\n              <strong>{formatPrice(preco)}</strong>\n            </div>\n          </div>\n        </div>\n\n        <ButtonAddProductCart id={id}/>\n      </Container>\n      </Modal>\n    \n  )\n}","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  gap: 1rem;\n\n  padding: 1.2rem 2rem;\n  border-radius: 0.5rem;\n  background: #f8f2f5;\n\n  .card-open-modal {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n\n    cursor: pointer;\n    \n    img { \n      max-width: 10rem;\n      width: 100%;\n    }\n\n    h2 {\n      font-size: 1.2rem;\n      font-weight: 600;\n    }\n\n    span {\n      padding: 0.5rem;\n    }\n }\n`","\nimport { useState } from \"react\";\n\nimport { IProductCardProps } from \"../../interfaces/interface\";\n\nimport { formatPrice } from \"../../util/format\";\nimport { ButtonAddProductCart } from \"../ButtonAddProductCart\";\nimport { ProductModal } from \"../ProductModal\";\n\nimport { Container } from \"./style\";\n\n\n\nexport function ProductCard( props: IProductCardProps) {\n\n  const [isProductModalOpen, setisProductModalOpen] = useState(false);\n \n  function handleOpenPokeDetailsModal() {\n    setisProductModalOpen(true)\n  }\n\n  function handleClosePokeDetailsModal() {\n    setisProductModalOpen(false)\n  }\n\n  return (\n    <>\n      <Container >\n        <div className=\"card-open-modal\" \n        onClick={handleOpenPokeDetailsModal}\n        >\n          <div>\n            <img\n              src={props.foto}\n              alt={props.nome}\n\n            />\n          </div>\n          <div>\n            <div>\n              <h2>{props.nome}</h2>\n              <span>{formatPrice(props.preco)}</span>   \n            </div>\n          </div>\n        </div>\n        <div>\n          <ButtonAddProductCart id={props.id} />\n        </div>\n      </Container>\n      \n      <ProductModal\n        name={props.nome}\n        isOpen={isProductModalOpen}\n        onRequestClose={handleClosePokeDetailsModal}\n        id={props.id}\n        descricao={props.descricao}\n        preco={props.preco}\n        foto={props.foto}\n        categoria={props.categoria}\n      />\n    </>\n  )\n}","import styled  from \"styled-components\";\n\nexport const Container = styled.main`\n\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  text-align: center;\n  gap: 2rem;\n \n`","import { IContentProps } from \"../../interfaces/interface\";\n\nimport { ProductCard } from \"../ProductCard\";\nimport { Container } from \"./style\";\n\n\n\nexport function Content({ produtos, selectedCategory}: IContentProps) {\n\n\n  \n  return(\n    \n      <Container>\n        {produtos.map(product => (\n          <ProductCard \n          key={product.nome} \n          nome={product.nome} \n          foto={product.foto} \n          id={product.id} \n          preco={product.preco} \n          descricao={product.descricao}\n          categoria={selectedCategory.nome}\n          />\n        ))}\n      </Container>\n  \n  )\n}","\nimport styled  from \"styled-components\";\n\nexport const Container = styled.div`\n \n  button {\n   \n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  \n  max-width: 18rem;\n  width: 100%;\n\n  margin-top: .5rem;\n\n  background: #fff;\n  padding: 1rem 2rem;\n  border-radius: 0.5rem;\n\n  font-size: 1.2rem;\n  \n  \n  &:hover {\n    background: #bbb;\n  }\n\n  transition: 0.2s;\n\n  &.selected {\n    background: #777;\n    color: #333\n\n  }\n}\n`","\nimport { IButtonProps } from '../../interfaces/interface';\nimport { Container } from './style';\n\n\n\nexport function ButtonSideBar({ nome, selected, ...rest }: IButtonProps) {\n  return (\n    <Container>\n    <button type=\"button\" {...(selected && { className: 'selected' })} {...rest}>\n      {nome}\n    </button>\n    </Container>\n  );\n}","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  color: #f8f5f2;\n\n  margin-top: -2.5rem;\n\n  gap: 0.5rem;\n`","import { ISideBarProps } from \"../../interfaces/interface\"\nimport { ButtonSideBar } from \"../ButtonSidebar\"\nimport { Container } from \"./style\"\n\n\nexport function SideBar({ categorias, handleClickButton, selectedCategoryId }: ISideBarProps) {\n    \n  return (\n    <Container>\n        <span>Categorias:</span>\n\n        <div className=\"buttons-container\">\n          {categorias.map(categoria => (\n            <ButtonSideBar\n              key={String(categoria.id)}\n              nome={categoria.nome}\n              onClick={() => handleClickButton(categoria.id)}\n              selected={selectedCategoryId === categoria.id}\n            />\n          ))}\n        </div>\n\n      \n    </Container>\n  )\n}","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n display: grid;\n    grid-template-columns: 1fr 3fr;\n    grid-gap: 1rem;\n    \n    padding: 4rem;\n\n    @media (max-width: 500px) {\n        grid-template-columns: 1fr;\n    grid-gap: 1rem;\n    }\n`","import { useEffect, useState } from \"react\";\nimport { Content } from \"../../components/Content\";\nimport { SideBar } from \"../../components/SideBar\";\nimport { ICategoryProps, IProductProps } from \"../../interfaces/interface\";\nimport { api } from \"../../services/api\";\n\nimport { Container } from \"./style\";\n\n\nexport function Home() {\nconst [selectedCategoryId, setSelectedCategoryId] = useState(1);\n\n  const [categorys, setCategorys] = useState<ICategoryProps[]>([]);\n  const [products, setProducts] = useState<IProductProps[]>([]);\n  \n  const [selectedCategory, setSelectedCategory] = useState<ICategoryProps>({} as ICategoryProps);\n\n  useEffect(() => {\n    api.get<ICategoryProps[]>('categorias').then(response => {\n      setCategorys(response.data);\n    });\n  }, []); \n\n  useEffect(() => {\n    async function loadProducts() {\n      const response = await api.get<IProductProps[]>(`produtos/?categoria_id=${selectedCategoryId}`)\n \n      setProducts(response.data);\n    }\n\n    api.get<ICategoryProps>(`categorias/${selectedCategoryId}`).then(response => {\n      setSelectedCategory(response.data);\n      \n    })\n    \n    loadProducts();\n  }, [selectedCategoryId]);\n\n  function handleClickButton(id: number) {\n    setSelectedCategoryId(id);\n  }\n  \n  \n\n  return (\n    <Container>\n      <SideBar \n        categorias={categorys}\n        handleClickButton={handleClickButton}\n        selectedCategoryId={selectedCategoryId}\n      />\n\n      <Content\n        produtos={products}\n        selectedCategory={selectedCategory} \n      />\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport media from \"styled-media-query\"\n\nexport const Container = styled.div`\n  margin: 0 1rem;\n  padding: 30px;\n  background: #fff;\n  border-radius: 4px;\n\n  \n  footer {\n    margin-top: 30px;\n    padding: 1rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    background: #ddd;\n    border-radius: 5px;\n\n    button {\n      background: #777;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      padding: 12px 20px;\n      font-weight: bold;\n      text-transform: uppercase;\n      transition: background 0.2s;\n      &:hover {\n        background: #222\n      }\n    }\n  }\n`;\n\nexport const ProductTable = styled.table`\n  width: 100%;\n\n  ${media.lessThan('small')`\n    tr {\n      display:flex;\n      flex-flow: row wrap;\n    }\n\n    thead, .price-product-subTotal {\n      display: none;\n    }\n\n    .name-price {\n      margin-top: 3rem;\n    }\n\n    .delete-button {\n      margin-left: 8rem;\n    }\n  `}\n\n  thead th {\n    color: #999;\n    text-align: left;\n    padding: 12px;\n  }\n  tbody td {\n    padding: 12px;\n    border-bottom: 1px solid #eee;\n\n     \n  }\n  img {\n    max-width: 9rem;\n    height: 100px;\n    margin-left: 1rem;\n    margin-bottom: -2rem;\n  }\n \n  strong {\n    color: #333;\n    display: block;\n    margin-top: -3rem;\n  }\n  \n  span {\n    display: block;\n    margin-top: 5px;\n    font-size: 1.7rem;\n    font-weight: bold;\n  }\n  div {\n    display: flex;\n    align-items: center;\n    input {\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      color: #666;\n      padding: 6px;\n      width: 50px;\n    }\n  }\n\n  button {\n    background: none;\n    border: 0;\n    padding: 6px;\n    svg {\n      color: #777;\n      transition: color 0.2s;\n    }\n    &:hover {\n      svg {\n        color: #333;\n      }\n    }\n    &:disabled {\n      svg {\n        cursor: not-allowed;\n      }\n    }\n  }\n`;\n\nexport const Total = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  ${media.lessThan('small')`\n      display:flex;\n      flex-direction: column;\n  `}\n  span {\n    color: #999;\n    font-weight: bold;\n  }\n  strong {\n    font-size: 28px;\n    margin-left: 5px;\n\n    ${media.lessThan('small')`\n      font-size: 1.5rem;\n  `}\n  }\n`;","import { useCart } from \"../../hooks/useCart\";\nimport { formatPrice } from \"../../util/format\";\nimport {\n  MdDelete,\n  MdAddCircleOutline,\n  MdRemoveCircleOutline,\n} from 'react-icons/md';\n\nimport { Container, ProductTable, Total } from \"./style\";\n\ninterface Product {\n  id: number;\n  nome: string;\n  preco: number;\n  foto: string;\n  amount: number;\n}\n\nexport function Cart() {\n  const { cart, removeProduct, updateProductAmount } = useCart();\n\n  const cartFormatted = cart.map(product => ({\n    ...product,\n    priceFormatted: formatPrice(product.preco),\n    subTotal: formatPrice(product.preco * product.amount)\n  }))\n\n  const total = formatPrice(\n    cart.reduce((sumTotal, product) => {\n      return sumTotal + product.preco * product.amount\n    }, 0)\n  )\n\n\n  function handleProductIncrement(product: Product) {\n    updateProductAmount({ productId: product.id, amount: product.amount + 1 })\n  }\n\n  function handleProductDecrement(product: Product) {\n    updateProductAmount({ productId: product.id, amount: product.amount - 1 })\n  }\n\n  function handleRemoveProduct(productId: number) {\n    removeProduct(productId);\n  }\n\n  return (\n    <Container>\n      <ProductTable>\n        <thead>\n          <tr>\n            <th/>\n            <th>PRODUTO</th>\n            <th>QTD</th>\n            <th>SUBTOTAL</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {cartFormatted.map(product => (\n            <tr key={product.id}>\n              <td>\n                <img src={product.foto}  alt={product.nome} />\n              </td>\n              <td className=\"name-price\">\n                <strong>{product.nome}</strong>\n                <span>{product.priceFormatted}</span>\n              </td>\n              <td>\n                <div>\n                  <button\n                    type=\"button\"\n                    disabled={product.amount <= 1}\n                    onClick={() => handleProductDecrement(product)}\n                  >\n                    <MdRemoveCircleOutline size={20} />\n                  </button>\n                  <input\n                    type=\"text\"\n                    value={product.amount}\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => handleProductIncrement(product)}\n                  >\n                    <MdAddCircleOutline size={20} />\n                  </button>\n                </div>\n\n              </td>\n              <td className=\"price-product-subTotal\">\n                <strong>{product.subTotal}</strong>\n              </td>\n              <td>\n                <button\n                  className=\"delete-button\"\n                  type=\"button\"\n                  onClick={() => handleRemoveProduct(product.id)}\n                >\n                  <MdDelete size={20} />\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </ProductTable>\n\n      <footer>\n        <button type=\"button\">Finalizar pedido</button>\n\n        <Total>\n          <span>TOTAL</span>\n          <strong>{total}</strong>\n        </Total>\n      </footer>\n    </Container>\n  );\n}\n","import { Routes, Route } from \"react-router-dom\";\n\nimport {Home} from './pages/Home';\nimport {Cart} from './pages/Cart';\n\nexport const Router = () => {\n  return (\n    <Routes>\n      <Route path=\"/mshop\" element={<Home/>} />\n      <Route path=\"/cart\" element={<Cart/>} />\n    </Routes>\n  );\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 30px 2rem;\n  background: #222;\n  padding: 15px 3rem;\n  border-radius: 7px;\n\n  a {\n    text-decoration: none;\n    color: #fff;\n    transition: opacity 0.2s;\n\n\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n\n`\n\nexport const Home = styled(Link)`\n\n`\n\nexport const Cart = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n\n  div {\n    text-align: right;\n    margin-right: 10px;\n\n    strong {\n      display: block;\n      color: #fff;\n    }\n\n    span {\n      font-size: 12px;\n      color: #999;\n    }\n  }\n`","import { MdShoppingBasket } from 'react-icons/md';\nimport { Link } from 'react-router-dom';\n\nimport { useCart } from '../../hooks/useCart';\n\nimport { Cart, Container } from \"./style\";\n\nexport function Header() {\n  const { cart } = useCart();\n  const cartSize = cart.length;\n\n  return (\n    <Container>\n      <Link to=\"/mshop\">\n        <h3>Home</h3>\n      </Link>\n\n      <Cart to=\"/cart\">\n        <div>\n          <strong>Meu carrinho</strong>\n          <span>\n            {cartSize === 1 ? `${cartSize} item` : `${cartSize} itens`}\n          </span>\n        </div>\n        <MdShoppingBasket size={36} color=\"#FFF\" />\n      </Cart>\n    </Container>\n  )\n}","import { BrowserRouter } from 'react-router-dom';\n\nimport { CartProvider } from \"./hooks/useCart\";\n\nimport { GlobalStyles } from \"./styles/global\";\nimport { Router } from './routes';\nimport { Header } from './components/Header';\n\nexport function App() {\n\n\n  return (\n    <BrowserRouter>\n    <CartProvider>\n      <Header />\n      <Router />\n      <GlobalStyles />\n    </CartProvider>\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}